## Data simulation function
f.simdat <- function(pi, n){
if(length(pi) != length(n)) stop('length(pi) != length(n)')
K <- length(n)
d <- data.frame(k = 1:K, n = n)
d$x <- sapply(1:K, FUN = function(i) rbinom(1, n[i], pi[i]))
d
}
d <- f.simdat(pi = c(0.2, 0.9, 0.4, 0.4, 0.2), n = c(10, 20, 10, 15, 15))
d
bma(pi0 = 0.15, y = d$x, n = d$n, P = NULL, mu0 = 0.5, phi0 = 1, pmp0 = 0)
bma(pi0 = 0.15, y = d$x, n = d$n, P = NULL, mu0 = 0.5, phi0 = 1, pmp0 = 1)
d <- f.simdat(pi = c(0.2, 0.9, 0.4, 0.4, 0.2), n = c(10, 20, 10, 15, 15))
bma(pi0 = 0.15, y = d$x, n = d$n, P = NULL, mu0 = 0.5, phi0 = 1, pmp0 = 0)
bma(pi0 = 0.15, y = d$x, n = d$n, P = NULL, mu0 = 0.5, phi0 = 1, pmp0 = 1)
bma(pi0 = 0.15, y = d$x, n = d$n, P = NULL, mu0 = 0.5, phi0 = 1, pmp0 = 40)
bma(pi0 = 0.15, y = d$x, n = d$n, P = NULL, mu0 = 0.5, phi0 = 1, pmp0 = 1)
knitr::opts_chunk$set(echo = TRUE)
rbinom(1,0.5)
rbinom(1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
7*12
library(fabricatr)
updateR()
library(MASS)
library(fabricatr)
library(tidyverse)
set.seed(42)
sample_size <- 10000
cluster.num  <- 12 ## number of clusters
cluster.size <- 74 ## number of subjects per cluster
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
bin.cov1 <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
bin.cov1
library(MASS)
library(fabricatr)
library(tidyverse)
set.seed(42)
sample_size <- 10000
cluster.num  <- 12 ## number of clusters
cluster.size <- 74 ## number of subjects per cluster
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
cLBP.dur <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
sim.data <- data.frame("site" <- cluster, "anxiety" <- promis[,1], "depress" <- promis[,2], "dulox.no" <- d.net, "cLBP.dur" <- cLBP.dur)
sim.data <- data.frame("site" <- cluster, "anxiety" <- promis[,1], "depress" <- promis[,2], "dulox.no" <- d.neg, "cLBP.dur" <- cLBP.dur)
library(MASS)
library(fabricatr)
library(tidyverse)
set.seed(42)
sample_size <- 10000
cluster.num  <- 12 ## number of clusters
cluster.size <- 74 ## number of subjects per cluster
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
cLBP.dur <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
sim.data <- data.frame("site" <- cluster, "anxiety" <- promis[,1], "depress" <- promis[,2], "dulox.no" <- d.neg, "cLBP.dur" <- cLBP.dur)
head(sim.dat)
library(MASS)
library(fabricatr)
library(tidyverse)
set.seed(42)
sample_size <- 10000
cluster.num  <- 12 ## number of clusters
cluster.size <- 74 ## number of subjects per cluster
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
cLBP.dur <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
sim.data <- data.frame("site" <- cluster, "anxiety" <- promis[,1], "depress" <- promis[,2], "dulox.no" <- d.neg, "cLBP.dur" <- cLBP.dur)
head(sim.data)
cluster
promis[,1]
data.frame("site" <- cluster, "anxiety" <- promis[,1], "depress" <- promis[,2], "dulox.no" <- d.neg, "cLBP.dur" <- cLBP.dur)
library(MASS)
library(fabricatr)
library(tidyverse)
set.seed(42)
sample_size <- 10000
cluster.num  <- 12 ## number of clusters
cluster.size <- 74 ## number of subjects per cluster
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
cLBP.dur <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
sim.data <- data.frame("site" = cluster, "anxiety" = promis[,1], "depress" = promis[,2], "dulox.no" = d.neg, "cLBP.dur" = cLBP.dur)
head(sim.data)
library(MASS)
library(fabricatr)
library(tidyverse)
set.seed(42)
sample_size <- 10000
cluster.num  <- 12 ## number of clusters
cluster.size <- 74 ## number of subjects per cluster
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
cLBP.dur <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
sim.data <- data.frame("sim" = rep(1,cluster.num*cluster.size), "site" = cluster, "anxiety" = promis[,1], "depress" = promis[,2], "dulox.no" = d.neg, "cLBP.dur" = cLBP.dur)
head(sim.data)
library(MASS)
library(fabricatr)
library(tidyverse)
set.seed(42)
sample_size <- 10000
cluster.num  <- 12  ## number of clusters
cluster.size <- 74  ## number of subjects per cluster
nSims        <- 100 ## number of simulated data sets
for (i in 1:nSims)
{
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
cLBP.dur <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
################## create data frame of simulated data ###############################
s <- cbind(sim, site, promis, d.neg, cLBP.dur)
}
library(MASS)
library(fabricatr)
library(tidyverse)
set.seed(42)
sample_size <- 10000
cluster.num  <- 12  ## number of clusters
cluster.size <- 74  ## number of subjects per cluster
nSims        <- 100 ## number of simulated data sets
for (i in 1:nSims)
{
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
cLBP.dur <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
################## create data frame of simulated data ###############################
s <- cbind(rep(i,cluster.num*cluster.size), site, promis, d.neg, cLBP.dur)
}
s
cluster.num  <- 12  ## number of clusters
cluster.size <- 74  ## number of subjects per cluster
nSims        <- 100 ## number of simulated data sets
s.all <- matrix(NA,nrow=nSims*cluster.num*cluster.size,ncol=6)
cluster.num  <- 12  ## number of clusters
cluster.size <- 74  ## number of subjects per cluster
nSims        <- 100 ## number of simulated data sets
s.all       <- matrix(NA,nrow=nSims*cluster.num*cluster.size,ncol=6)
s.all
cluster.num  <- 12  ## number of clusters
cluster.size <- 74  ## number of subjects per cluster
nSims        <- 100 ## number of simulated data sets
s.all       <- matrix(NA,nrow=nSims*cluster.num*cluster.size,ncol=6)
r<- 1
for (i in 1:nSims)
{
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
cLBP.dur <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
################## create data frame of simulated data ###############################
s.all[r:(r+cluster.num*cluster-1),] <- cbind(rep(i,cluster.num*cluster.size), site, promis, d.neg, cLBP.dur)
r <- r + cluster.num*cluster
}
library(MASS)
library(fabricatr)
library(tidyverse)
set.seed(42)
sample_size <- 10000
cluster.num  <- 12  ## number of clusters
cluster.size <- 74  ## number of subjects per cluster
nSims        <- 100 ## number of simulated data sets
s.all       <- matrix(NA,nrow=nSims*cluster.num*cluster.size,ncol=6)
r<- 1
for (i in 1:nSims)
{
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
cLBP.dur <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
################## create data frame of simulated data ###############################
s.all[r:(r+cluster.num*cluster.size-1),] <- cbind(rep(i,cluster.num*cluster.size), site, promis, d.neg, cLBP.dur)
r <- r + cluster.num*cluster.size
}
colnames(s.all) <- c("sim","size","anxiety","depress","dulox.no","cLBP.dur")
library(MASS)
library(fabricatr)
library(tidyverse)
set.seed(42)
sample_size <- 10000
cluster.num  <- 12  ## number of clusters
cluster.size <- 74  ## number of subjects per cluster
nSims        <- 100 ## number of simulated data sets
s.all       <- matrix(NA,nrow=nSims*cluster.num*cluster.size,ncol=6)
r<- 1
for (i in 1:nSims)
{
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
cLBP.dur <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
################## create data frame of simulated data ###############################
s.all[r:(r+cluster.num*cluster.size-1),] <- cbind(rep(i,cluster.num*cluster.size), site, promis, d.neg, cLBP.dur)
r <- r + cluster.num*cluster.size
}
colnames(s.all) <- c("sim","size","anxiety","depress","dulox.no","cLBP.dur")
head(sim.data)
tail(sim.data)
tail(s.all)
head(s.all)
tail(s.all)
################## create data frame of simulated data ###############################
s.all[r:(r+cluster.num*cluster.size-1),] <- cbind(rep(i,cluster.num*cluster.size), cluster, promis, d.neg, cLBP.dur)
set.seed(42)
cluster
(rho +diag(1-rho,2))
(rho +diag(1-rho,2))
cluster.num  <- 12  ## number of clusters
library(MASS)
library(fabricatr)
library(tidyverse)
set.seed(42)
cluster.num  <- 12  ## number of clusters
cluster.size <- 74  ## number of subjects per cluster
nSims        <- 100 ## number of simulated data sets
s.all       <- matrix(NA,nrow=nSims*cluster.num*cluster.size,ncol=6)
r<- 1
for (i in 1:nSims)
{
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
cLBP.dur <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
################## create data frame of simulated data ###############################
s.all[r:(r+cluster.num*cluster.size-1),] <- cbind(rep(i,cluster.num*cluster.size), cluster, promis, d.neg, cLBP.dur)
r <- r + cluster.num*cluster.size
}
colnames(s.all) <- c("sim","size","anxiety","depress","dulox.no","cLBP.dur")
head(s.all)
tail(s.all)
colnames(s.all) <- c("sim","site","anxiety","depress","dulox.no","cLBP.dur")
library(MASS)
library(fabricatr)
library(tidyverse)
set.seed(42)
cluster.num  <- 12  ## number of clusters
cluster.size <- 74  ## number of subjects per cluster
nSims        <- 100 ## number of simulated data sets
s.all       <- matrix(NA,nrow=nSims*cluster.num*cluster.size,ncol=6)
r<- 1
for (i in 1:nSims)
{
################# cluster effects  ###################################################
cluster    <- rep(1:cluster.num,each=cluster.size)  ## simulate cluster random effects
cluster.re <- rnorm(cluster.num,mean=0,sd=4)    ## map random effects to cluster id
cluster.re <- cluster.re[cluster]
################# simulate Duloxetine contraindication ###############################
d.neg <- rbinom(cluster.num*cluster.size,1,0.35)
################# PROMIS random variables ############################################
mu     <- c(60,60)
sd     <- diag(c(8,8))
rho    <- 0.6
cov    <- sd%*%(rho +diag(1-rho,2))%*%sd
## add in mean zero random cluster effect and also fixed effect for
## Duloxetine contraindication
promis <- mvrnorm(cluster.num*cluster.size,mu,cov) + d.neg*5 + cluster.re
################## generate binary random variables ##################################
cLBP.dur <- fabricatr::correlate(given = rowSums(promis),
rho = .3,
draw_handler = draw_binomial,
prob = .7)
################## create data frame of simulated data ###############################
s.all[r:(r+cluster.num*cluster.size-1),] <- cbind(rep(i,cluster.num*cluster.size), cluster, promis, d.neg, cLBP.dur)
r <- r + cluster.num*cluster.size
}
colnames(s.all) <- c("sim","site","anxiety","depress","dulox.no","cLBP.dur")
head(s.all)
tail(s.all)
head(s.all,n=881)
200/8
200/10
200/12
200/15
200/20
200/40
200/80
200/60
200/100
256/40
install.github("ethan-alt/hdbayes")
library(devtools)
install.github("ethan-alt/hdbayes")
install.packages("devtools")
install.github("ethan-alt/hdbayes")
library(devtools)
install.github("ethan-alt/hdbayes")
library(devtools)
install_github("ethanalt/hdbayes")
install_github("ethan-alt/hdbayes")
help(package=tm)
help(package=tm)
help(package=tm)
help(package=hdbayes)
9000*12
5000*12
histogram(rbeta(100000,shape1=10,shape2=10))
hist(rbeta(100000,shape1=10,shape2=10))
hist(rbeta(100000,shape1=15,shape2=10))
hist(rbeta(100000,shape1=20,shape2=10))
options(contrasts = c(factor = "contr.SAS", ordered = "contr.poly"))
library(sas7bdat)
setwd('C:/Users/psioda/Documents/GitHub/bios-courses/BIOS-767/DATA/DENTAL')
dental.wide = read.sas7bdat('dental.sas7bdat')
names(dental.wide) = tolower(names(dental.wide))
## change to long format
library(tidyverse)
dental.long = dental.wide %>%
pivot_longer(cols = c(age8, age10, age12, age14),
names_to = 'age', names_prefix = 'age', values_to = 'distance')
dental.long$gender = factor(dental.long$gender)
dental.long$age    = as.numeric(dental.long$age)
dental.long$id     = factor(dental.long$id)
head(dental.long)
dental.long[dental.long$id == i,]
dental.long[dental.long$id == 1,]
dental.long[dental.long$id == 1,]$distance
